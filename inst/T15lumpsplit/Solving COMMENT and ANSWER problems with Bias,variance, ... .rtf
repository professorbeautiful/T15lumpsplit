{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 HelveticaNeue;
\f3\fmodern\fcharset0 Courier;\f4\fnil\fcharset0 Consolas;\f5\fnil\fcharset0 SourceCodePro-Bold;
\f6\fnil\fcharset0 SourceCodePro-Regular;}
{\colortbl;\red255\green255\blue255;\red15\green112\blue1;\red255\green255\blue255;\red0\green0\blue0;
\red24\green25\blue27;\red60\green60\blue59;\red245\green245\blue245;\red240\green115\blue25;\red133\green0\blue96;
\red245\green245\blue249;\red35\green38\blue40;\red14\green114\blue164;\red210\green0\blue53;}
{\*\expandedcolortbl;;\cssrgb\c0\c50196\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c12549\c12941\c14118;\cssrgb\c30196\c30196\c29804;\cssrgb\c96863\c96863\c96863;\cssrgb\c96078\c52941\c12157;\cssrgb\c60000\c0\c45098;
\cssrgb\c96863\c96863\c98039;\cssrgb\c18431\c19608\c20784;\cssrgb\c0\c52549\c70196;\cssrgb\c86667\c6667\c26667;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Solving COMMENT and ANSWER problems with Bias,variance, ...\
\
Loading previous entries from disk is working (locally and at shinyapps).\
Saving to disk using the button at the bottom is working (locally and at shinyapps).\
Also control-shift-S does the file download.\
	document.getElementById('downloadAllUserEntries').click();\
\
\
TODO:   TELL the user the file name.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b0 \cf0 \
Aha.   control-shift-S   does it directly.     In KeyHandler.js\
		document.getElementById('downloadAllUserEntries').click();\
but  "click to save all responses"  uses this indirect method.\
	shinyjs::extendShinyjs(text = saveEntriesJScode,\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b \cf0 \
\
I learned a bunch about extendShinyjs\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b0 \cf0 The example in help for shinyjs works.\
I can get a function to register , and they always look like\
	 created-by-extendShinyJS.R\
so the info is in the parent frame.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b \cf0 \
In  R:\
shinyjs::extendShinyjs(text = 'console.log(1345)', functions='shinytest')\
js$shinytest      
\f1\b0 ok, but...\
js$shinytest()   doesn't work.  It calls jsFuncHelper, which calls session$sendCustomMessage,\
which calls 
\f2\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 private$sendMessage(custom = data)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 which I can't see in the debugging panel.\
\
Putting in print statements into js$shinytest, the fun values are\
\pard\pardeftab720\partightenfactor0

\f2\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [1] "js$shinytest"\
[1] "shinytest"
\f1\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
Ah, problem solved!  Looking at how shinyDebuggingPanel does it:\
t
\f0\b ags$script(\
            paste0(\
              '(eval("',   'console.log(9999)' , '"))'       # THIS WORKS!\
            )\
          )\

\f1\b0 AND it works with strings:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b \cf0 paste0(\
              '(eval("',   'console.log(\\\\"STRING\\\\")' , '"))'       # THIS WORKS!\
            )\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b0 \cf0   \
But though it works in console and even in the R eval box (usually),\
still no luck from clicking the string... though the callback IS called\
(printing to R console).\
\
\
 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b \cf0 =-=-=-=-=-=-=-=\
\
Using cookies seems easy.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b0 \cf0 In R:\
	shinycookie::updateCookie(\
		  shiny::getDefaultReactiveDomain(), TQ1='I am TQ1')\
This works.  Then  in JS,  
\f0\b document.cookie
\f1\b0  gives you:\
	"TQ1=I%20am%20TQ1; TQ22222222=I%20am%20TQ2"\
Parse it (at semicolons) with the code in cookie-example-2.R, saved now into readCookie.js\
This works!   E.g.  readCookie('TQ1')\
\
You can update the cookie from   R:  
\f3\fs26\fsmilli13333 \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 updateCookie(session, ...)\

\f1\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
Persistence across sessions?  \
In chrome://settings/cookies/detail?site=trials.shinyapps.io\
"
\f2\fs26 \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 Expires\
\pard\pardeftab720\partightenfactor0
\cf4 \strokec4 When the browsing session ends"\
But: \
\pard\pardeftab720\partightenfactor0

\f4\fs28\fsmilli14400 \cf6 \cb7 \strokec6   time() + (\cf8 \strokec8 10\cf6 \strokec6  * \cf8 \strokec8 365\cf6 \strokec6  * \cf8 \strokec8 24\cf6 \strokec6  * \cf8 \strokec8 60\cf6 \strokec6  * \cf8 \strokec8 60\cf6 \strokec6 )\
\pard\pardeftab720\partightenfactor0

\f2\fs26 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0

\f5\b\fs26\fsmilli13200 \cf9 \cb10 \strokec9 document
\f6\b0 \cf11 \strokec11 .\cf12 \strokec12 cookie\cf11 \strokec11  = \cf13 \strokec13 "username=Max Brown; expires=Wed, 05 Aug 2020 23:00:00 UTC"\cf11 \strokec11 ;
\f2\fs26 \cf4 \cb1 \strokec4 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
You can run this in shinyDebuggingPanel JS\
	temp = 2452345;\
temp = 'kjhgjk';    single or double quotes both ok.\
Semicolon not needed.\
Good news; after it disconnected at shinyapps, on reconnecting it remembered the cookie.\
\
\
\
}